security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_SUPERUSER: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN: [ROLE_EDITOR, CAN_VIEW_REPORTS]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\ScreenlockAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
            switch_user: true
            access_denied_handler: App\Security\AccessDeniedHandler
            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check
                csrf_token_generator: security.csrf.token_manager
                csrf_parameter: _csrf_token
                csrf_token_id: google_2fa_check

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[(es|fr|ru|de|pt|nl)/]*2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        - { path: ^/[(es|fr|ru|de|pt|nl)/]*ajax/squadron/info, roles: ROLE_PENDING }
        - { path: ^/[(es|fr|ru|de|pt|nl)/]*ajax/password/strength, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[(es|fr|ru|de|pt|nl)/]*(select_squadron|create_squadron), roles: ROLE_PENDING }
        - { path: ^/[(es|fr|ru|de|pt|nl)/]*(login|logout|forgot|new_member|verify_email|resend_token|pending_access|reset_pw|join), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
